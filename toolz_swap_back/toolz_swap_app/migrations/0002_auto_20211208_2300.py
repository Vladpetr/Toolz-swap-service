# Generated by Django 3.2.9 on 2021-12-08 22:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('toolz_swap_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('brand_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('logo', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('city_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('population', models.IntegerField()),
                ('size_sqkm', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ListingImages',
            fields=[
                ('image_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to='')),
                ('top_image', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ListingRequest',
            fields=[
                ('request_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField()),
                ('body', models.TextField()),
                ('renting_start', models.DateTimeField(auto_now_add=True)),
                ('renting_end', models.DateTimeField()),
                ('approved', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='ListingReviews',
            fields=[
                ('review_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('body', models.TextField()),
                ('top_review', models.BooleanField()),
                ('rating', models.IntegerField()),
                ('review_likes', models.IntegerField()),
                ('review_dislikes', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Listings',
            fields=[
                ('listing_id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular listing', primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=2000)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('rating_average', models.FloatField()),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.brands')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.cities')),
            ],
        ),
        migrations.CreateModel(
            name='Neighborhoods',
            fields=[
                ('neighborhood_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('population', models.IntegerField()),
                ('size_sqkm', models.FloatField()),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.cities')),
            ],
        ),
        migrations.CreateModel(
            name='ToolModels',
            fields=[
                ('model_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('year_released', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ToolTypes',
            fields=[
                ('tool_id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('purpose', models.TextField()),
                ('popularity', models.CharField(max_length=200)),
            ],
        ),
        migrations.RemoveField(
            model_name='swaps',
            name='borrowerId',
        ),
        migrations.RemoveField(
            model_name='swaps',
            name='listingId',
        ),
        migrations.RemoveField(
            model_name='user',
            name='id',
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='user',
            name='bio',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='user',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='phone',
            field=models.CharField(blank=True, max_length=200),
        ),
        migrations.AddField(
            model_name='user',
            name='profile_photo',
            field=models.ImageField(blank=True, null=True, upload_to=''),
        ),
        migrations.AddField(
            model_name='user',
            name='user_id',
            field=models.UUIDField(default=uuid.uuid4),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(max_length=40, primary_key=True, serialize=False, unique=True),
        ),
        migrations.DeleteModel(
            name='Listing',
        ),
        migrations.DeleteModel(
            name='Swaps',
        ),
        migrations.DeleteModel(
            name='Tool',
        ),
        migrations.AddField(
            model_name='listings',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.toolmodels'),
        ),
        migrations.AddField(
            model_name='listings',
            name='neighborhood',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.neighborhoods'),
        ),
        migrations.AddField(
            model_name='listings',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='listings',
            name='tool_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.tooltypes'),
        ),
        migrations.AddField(
            model_name='listingreviews',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='listingreviews',
            name='listing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.listings'),
        ),
        migrations.AddField(
            model_name='listingrequest',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='listingrequest',
            name='listing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.listings'),
        ),
        migrations.AddField(
            model_name='listingrequest',
            name='recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='listingimages',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='listingimages',
            name='listing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.listings'),
        ),
        migrations.AddField(
            model_name='user',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='toolz_swap_app.cities'),
        ),
    ]
